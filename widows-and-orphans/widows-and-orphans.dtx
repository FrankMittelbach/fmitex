% \iffalse meta-comment
%
%% File: widows-and-orphans.dtx (C) Copyright 2017-2018 Frank Mittelbach
%
% It may be distributed and/or modified under the conditions of the
% LaTeX Project Public License (LPPL), either version 1.3c of this
% license or (at your option) any later version.  The latest version
% of this license is in the file
%
%    http://www.latex-project.org/lppl.txt
%
%
% The development version of the bundle can be found at
%
%    https://github.com/FrankMittelbach/fmitex/widows-and-orphans
%
% for those people who are interested.
%
%<*driver>
\documentclass[full]{l3doc}
\usepackage{amstext}
\begin{document}
  \DocInput{\jobname.dtx}
\end{document}
%</driver>
%


%    \begin{macrocode}
%<*package>
%    \end{macrocode}
%
%    \begin{macrocode}
%<@@=fmwao>
%    \end{macrocode}
%
%    \begin{macrocode}
\NeedsTeXFormat{LaTeX2e}
%    \end{macrocode}
%    
%    \begin{macrocode}
\RequirePackage{xparse,l3keys2e}

\ProvidesExplPackage
    {widows-and-orphans}
    {2018/08/29}
    {v1.0a}
    {Detecting widows and orphans (FMi)}
%    \end{macrocode}

%    \begin{macrocode}



% execute this code at the very beginning of the OR
\toks0=\output
\expandafter
\output\expandafter{\expandafter
   \@@_test_for_widows_etc:
   \the\toks0}


\bool_new:N       \g_@@_check_next_bool
\bool_gset_true:N \g_@@_check_next_bool


% check if the output penalty was due to orphan or widow or both

      
\cs_new:Npn \@@_test_for_widows_etc: {
  \int_case:nnF { \outputpenalty - \interlinepenalty }
    {
      { \widowpenalty }
	{ \@@_problem_identified:nn{widow}{Widow} }
      { \displaywidowpenalty }
	{ \@@_problem_identified:nn{widow}{Display~ widow} }
      { \@clubpenalty }
	{ \@@_problem_identified:n{orphan} }
      { \@clubpenalty + \widowpenalty }
	{ \@@_problem_identified:nn{orphan-widow}{} }
      { \@clubpenalty + \displaywidowpenalty }
	{ \@@_problem_identified:nn{orphan-widow}{display} }
%           
      { \brokenpenalty }
	{ \@@_problem_identified:n{hyphen} }
%           
      { \predisplaypenalty }
	{ \@@_problem_identified:nn{widow}{Lonely~ display} }
%           
      { \brokenpenalty + \widowpenalty }
	{ \@@_problem_identified:nn{widow}{Widow} }
      { \brokenpenalty + \displaywidowpenalty }
	{ \@@_problem_identified:nn{widow}{Display~ widow} }
      { \brokenpenalty + \@clubpenalty }
	{ \@@_problem_identified:n{orphan} }
      { \brokenpenalty + \@clubpenalty + \widowpenalty }
	{ \@@_problem_identified:nn{orphan-widow}{} }
      { \brokenpenalty + \@clubpenalty + \displaywidowpenalty }
	{ \@@_problem_identified:nn{orphan-widow}{display} }
    }
    {
      \bool_if:NF \g_@@_check_next_bool
        {
	 \msg_error:nn{widows-and-orphans}{no-problem}
	}
    }
  \bool_gset_true:N \g_@@_check_next_bool
}

\cs_new:Npn \@@_problem_identified:n #1 {
   \bool_if:NT \g_@@_check_next_bool
     { \msg_warning:nn{widows-and-orphans}{#1} }
}
\cs_new:Npn \@@_problem_identified:nn #1 #2 {
   \bool_if:NT \g_@@_check_next_bool
     { \msg_warning:nnn{widows-and-orphans}{#1}{#2} }
}




\prg_new_conditional:Npnn \LaTeXe_if_switch:n #1 { p , T , F , TF }
  { \exp_args:Nc\if_meaning:w { if#1 } \iftrue \prg_return_true:
                                        \else: \prg_return_false: \fi: }


\cs_new_nopar:Npn \@@_roman_thepage: {\csname @roman\endcsname \c@page}

\cs_new:Npn \@@_some_page:n #1 {
  \cs_if_eq:NNTF \thepage \@@_roman_thepage:
    { \int_to_roman:n  }
    { \int_to_arabic:n }
  { #1 }
}                               

\cs_new:Npn \@@_this_page: { \@@_some_page:n   \c@page       }
\cs_new:Npn \@@_next_page: { \@@_some_page:n { \c@page + 1 } }  


\msg_new:nnnn {widows-and-orphans} {no-problem}
  { No~ problem~ to~ suppress~ on~ this~ page! }
  { Supression~ of~ a~ widow~ or~ orphan~ problem~ was~ requested~
    but~ on~ the~ current~ page~ there~ doesn't~ seem~ to~ be~ any.~
    Maybe~ the~ text~ was~ changed~ and~ the~ request~ should~ get~ removed?}
		

\msg_new:nnnn {widows-and-orphans} {orphan}
  { Orphan~ on~ page~ \@@_this_page:
    \LaTeXe_if_switch:nT {@twocolumn}
      { \space (
	\LaTeXe_if_switch:nTF {@firstcolumn}
	  { first~ } { (second~ }
	 column)                             }
  }
  { Check~ out~ the~ page~ and~ see~ if~ you~ can~ avoid~ the~ orphan.}
		

\msg_new:nnnn {widows-and-orphans} {hyphen}
  { Hyphen~ in~ last~ line~ of~ page~ \@@_this_page:
    \LaTeXe_if_switch:nT {@twocolumn}
      { \space (
	\LaTeXe_if_switch:nTF {@firstcolumn}
	  { first~ } { (second~ }
	 column) }
  }
  { Check~ out~ the~ page~ and~ see~ if~ you~ can~ get~
    a~ better~ line~ break. }


\msg_new:nnnn {widows-and-orphans} {widow}
  { #1~ on~ page~ 
    \LaTeXe_if_switch:nTF {@twocolumn}
      { \LaTeXe_if_switch:nTF {@firstcolumn}
	  { \@@_this_page: \space (second~ }
	  { \@@_next_page: \space (first~  }
	column)                              }
      { \@@_next_page: }
  }
  { Check~ out~ the~ page~ and~ see~ if~ you~ can~ avoid~ the~ widow.}

\msg_new:nnnn {widows-and-orphans} {orphan-widow}
  { Orphan~
    \LaTeXe_if_switch:nTF {@twocolumn}
       { \LaTeXe_if_switch:nTF {@firstcolumn}
	   { and~ #1 widow~ on~ page~ \@@_this_page: \space
	     (first~ and~ second~ }
	   { on~ page~ \@@_this_page: \space (second~ column)~
	     and~ #1 widow~ on~ page~ \@@_next_page: \space (first~ }
       }
       { on~ page~ \@@_this_page: \space (second~ column)~
	 and~ #1 widow~ on~ page~ \@@_next_page: \space (first~ }
     column)
   }
  { Check~ out~ the~ page~ and~ see~ if~ you~ can~ avoid~ both~
    orphan~ and~ widow.}
   




\prop_new:N \@@_penalties_prop

\int_new:N \l_@@_int

\bool_new:N \l_@@_result_bool


% #1 variable
% #2 clist of test expressions

\cs_new:Npn \@@_decide_penalty:Nn #1 #2 {
%
  \bool_set_false:N \l_@@_result_bool
%
  \bool_do_until:Nn \l_@@_result_bool
    {
     \bool_set_true:N \l_@@_result_bool
     \clist_map_inline:nn { #2 }
       {
        \int_set:Nn \l_@@_int {##1}
        \prop_get:NVNT \@@_penalties_prop \l_@@_int \@@_tmp_tl
            { \clist_map_break:n { \bool_set_false:N \l_@@_result_bool } }
       }
     \bool_if:NTF \l_@@_result_bool
       {
% no immediate conflict found:
        \int_compare:nNnTF #1 = {10000}
	  { \int_incr:N #1
   	    \bool_set_false:N \l_@@_result_bool   % reiterate
	  }
% add penalties for all clist items to the prop
          { \clist_map_inline:nn { #2 }
	    {
	     \int_set:Nn \l_@@_int {##1}
	     \prop_put:NVn \@@_penalties_prop \l_@@_int { ##1 }
	    }
  	  }
       }
% conflict found: increment and try again
       { \int_incr:N #1 }
     }
}


\cs_new:Npn \@@_initialize: {
  \prop_clear:N  \@@_penalties_prop
  \prop_put:NVn  \@@_penalties_prop \@lowpenalty  \@lowpenalty
  \prop_put:NVn  \@@_penalties_prop \@medpenalty  \@medpenalty
  \prop_put:NVn  \@@_penalties_prop \@highpenalty \@highpenalty
%
  \@@_decide_penalty:Nn \@clubpenalty { \@clubpenalty }
%
  \@@_decide_penalty:Nn \widowpenalty 
      { \widowpenalty , 
	\widowpenalty + \@clubpenalty }
%
  \@@_decide_penalty:Nn \displaywidowpenalty 
      { \displaywidowpenalty , 
	\displaywidowpenalty + \@clubpenalty }
%
  \@@_decide_penalty:Nn \brokenpenalty
      { \brokenpenalty ,
	\brokenpenalty + \@clubpenalty ,
	\brokenpenalty + \widowpenalty , 
	\brokenpenalty + \widowpenalty + \@clubpenalty,
	\brokenpenalty + \displaywidowpenalty + \@clubpenalty }
%
  \@@_decide_penalty:Nn \predisplaypenalty { \predisplaypenalty }
%  \prop_show:N \@@_penalties_prop
}


\AtBeginDocument {
  \@@_initialize:
%  \prop_show:N \@@_penalties_prop
}





\keys_define:nn {fmwao}
     {
       % ====================================
      ,check .choice:
      ,check / error
         .code:n = \msg_redirect_module:nnn { widows-and-orphans } { warning } { error }
      ,check / info
         .code:n = \msg_redirect_module:nnn { widows-and-orphans } { warning } { info }
      ,check / none
         .code:n = \msg_redirect_module:nnn { widows-and-orphans } { warning } { none }
      ,check / warning
         .code:n = \msg_redirect_module:nnn { widows-and-orphans } { warning } { }
       % ====================================
      ,orphans .choice:
      ,orphans / prevent 
         .code:n = \int_set:Nn \@clubpenalty { 10000         }
	           \int_set:Nn \clubpenalty  { \@clubpenalty }
      ,orphans / avoid 
         .code:n = \int_set:Nn \@clubpenalty { 5000          }
	           \int_set:Nn \clubpenalty  { \@clubpenalty }
      ,orphans / default 
         .code:n = \int_set:Nn \@clubpenalty { 150           }
	           \int_set:Nn \clubpenalty  { \@clubpenalty }
       % ====================================
      ,widows .choice:
      ,widows / prevent 
         .code:n = \int_set:Nn \widowpenalty { 10000         }
      ,widows / avoid 
         .code:n = \int_set:Nn \widowpenalty { 5000          }
      ,widows / default 
         .code:n = \int_set:Nn \widowpenalty { 150           }
       % ====================================
      ,hyphens .choice:
      ,hyphens / prevent 
         .code:n = \int_set:Nn \brokenpenalty { 10000        }
      ,hyphens / avoid 
         .code:n = \int_set:Nn \brokenpenalty { 2000         }
      ,hyphens / default 
         .code:n = \int_set:Nn \brokenpenalty { 50           }
       % ====================================
      ,prevent-all 
         .code:n = \int_set:Nn \@clubpenalty {       10000   }
	           \int_set:Nn \widowpenalty {       10000   }
	           \int_set:Nn \displaywidowpenalty{ 10000   }
	           \int_set:Nn \brokenpenalty{       10000   }
	           \int_set:Nn \predisplaypenalty{   10000   }
	           \int_set:Nn \clubpenalty  { \@clubpenalty }
      ,avoid-all 
         .code:n = \int_set:Nn \@clubpenalty {        5000   }
	           \int_set:Nn \widowpenalty {        5000   }
	           \int_set:Nn \displaywidowpenalty { 2000   }
	           \int_set:Nn \brokenpenalty{        2000   }
%	           \int_set:Nn \predisplaypenalty{    9999   }
	           \int_set:Nn \clubpenalty  { \@clubpenalty }
      ,default-all 
         .code:n = \int_set:Nn \@clubpenalty {         150   }
	           \int_set:Nn \widowpenalty {         150   }
	           \int_set:Nn \displaywidowpenalty {   50   }
	           \int_set:Nn \brokenpenalty{         100   }
	           \int_set:Nn \predisplaypenalty{   10000   }
	           \int_set:Nn \clubpenalty  { \@clubpenalty }
     }


\ProcessKeysPackageOptions{fmwao}


\NewDocumentCommand \WaOsetup { m } {
  \keys_set:nn {fmWaO} {#1}
  \@@_initialize: 
  \ignorespaces }

\NewDocumentCommand \WaOparameters { } {
  \prop_show:N \@@_penalties_prop
}


\NewDocumentCommand \WaOsuppress { } {
  \bool_gset_false:N \g_@@_check_next_bool
}


%    \end{macrocode}


\endinput
